\ProvidesPackage{entwurf}
\RequirePackage{xcolor}
\RequirePackage{expl3}
\RequirePackage{rdfref-user,rdfref-query}
\RequirePackage{caption}
\RequirePackage{tikz}
\RequirePackage{calc}
\RequirePackage[framemethod=tikz]{mdframed}
\RequirePackage{etoolbox}

\parindent 0pt

%\ExplSyntaxOn

\newcounter{apiCommand}
\newtoggle{apiCmdBG}
\toggletrue{apiCmdBG}
\newcommand{\apiCmdClr}{gray!20}

% Defines a new API-command
% Params:
%   1: op-value
%   2: Description
%   3: Arguments
%   4: Return values
%   5: Errorcodes
\newtoggle{apiErrorPrint}
\newcommand{\apiCommand}[5]{
    \iftoggle{apiCmdBG}{%
        \renewcommand{\apiCmdClr}{gray!20}
    }{%
        \renewcommand{\apiCmdClr}{white}
    }
    \begin{mdframed}[hidealllines=true,backgroundcolor=\apiCmdClr]%
    \vspace{8pt}
    \stepcounter{apiCommand}
    Befehl~\arabic{apiCommand}:~\textbf{#1}
    \\#2
    \par Parameter:
    \\\apiArgument{#3}
    \par RÃ¼ckgabewerte:
    \\\apiArgument{#4}
    \par Fehlercodes:
    \togglefalse{apiErrorPrint}
    \\\ifstrempty{#5}{%
        \apiArgument{---/Keine weiteren Fehlercodes}A%
        % some symbol here to work around some weird bug
    }%
    {%
        \toggletrue{apiErrorPrint}%
    }%
    \iftoggle{apiErrorPrint}{%
        \apiErrorPrint{#5}
    }{}%
    \end{mdframed}%
    \iftoggle{apiCmdBG}{%
        \togglefalse{apiCmdBG}%
    }{%
        \toggletrue{apiCmdBG}%
    }%
}

% Defines an argument for an API-command
% Params:
%   1: op-value and description,
%      seperated by forward slash (/)
\newcommand{\apiArgument}[2]{
    \apiTableEntry{#1}{0.22}{0.73}
}

% Defines an error code for an API-command
% Params:
%   1: numerical error code and description,
%      seperated by forward slash (/)
\newcommand{\apiErrorPrint}[1]{
    \foreach \errID in {#1} {
        \begin{tabular}[t]{ p{0.22\textwidth} p{0.73\textwidth} }%
            \hfill\textbf{\apiErrorRef{\errID}} &%
                \GetProperty{api-error-object:\errID}{api-error-desc}
        \end{tabular}\\
    }%
}

\newcommand{\apiErrorNew}[3]{
    \rdflabel{api-error-object:#1}
    \AddPropertyEx{api-error-defined}{yes}
    \AddPropertyEx{api-error-code}{#2}
    \AddPropertyEx{api-error-desc}{#3}
}

\newcommand{\apiErrorRef}[1]{%
    \hyperref[api-error-object:#1]{%
        \GetProperty{api-error-object:#1}{api-error-code}%
    }%
}

\newcommand{\aETColSizeA}{0.15}
\newcommand{\aETColSizeB}{0.8}
\newcommand{\apiErrorTable}{
    \begin{tabular}[t]{ p{\aETColSizeA\textwidth} p{\aETColSizeB\textwidth} }
        \textbf{Fehlercode} & \textbf{Beschreibung} \\
        \hline
    \end{tabular}\\
    \Bind{?f}{api-error-defined}{yes}{%
        \begin{tabular}[t]{ p{\aETColSizeA\textwidth}
                p{\aETColSizeB\textwidth} }
            \hfill\textbf{\GetProperty{\GetVal{?f}}{api-error-code}} &%
                \GetProperty{\GetVal{?f}}{api-error-desc}
        \end{tabular}\\
    }%
}

% Creates a table entry for use in API definitions
% Params:
%   1: values for both cells in row,
%      seperated by forward slash (/)
%   2: Width of first column
%   3: Width of second column
\newcommand{\apiTableEntry}[3]{
    \foreach \code/\desc in {#1} {
        \begin{tabular}[t]{ p{#2\textwidth} p{#3\textwidth} }
            \hfill\textbf{\code} & \desc
        \end{tabular}\\
    }
    \vspace{4pt}
}

% Includes an SVG using a figure, creates label 'fig:filename'
% Params:
%   1: Filename. Without extension or directories. File is expected
%       to have the 'pdf_tex' extension and be located in 'build/images'
%   2: Caption
%   3: Width
\newcommand{\svgFigure}[3]{
    \begin{figure}[!htb]
        \centering
        \def\svgwidth{#3}
        \input{build/images/#1.pdf_tex}
        \caption{#2}
        \label{fig:#1}
    \end{figure}
}

%\ExplSyntaxOff
